generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement()) @map("_id")
  email        String        @unique
  name         String?       @default("")
  surname      String?       @default("")
  club         String?       @default("")
  city         String?       @default("")
  country      String?       @default("")
  image        String?
  permissions  Int
  balance      Int
  password     String
  team         Player[]
  registration Event[]
  transaction  Transaction[]
  Team         Team[]
}

model Transaction {
  id      Int      @id @default(autoincrement()) @map("_id")
  type    Int
  date    DateTime
  amount  Int
  reciept String
  event   Event[]
  teams   Team[]
  User    User?    @relation(fields: [userId], references: [id])
  userId  Int?
}

model Event {
  id            Int          @id @default(autoincrement()) @map("_id")
  title         String
  startDate     DateTime
  startTime     DateTime
  endDate       DateTime
  discipline    String
  category      String
  contry        String
  city          String
  street        String
  prices        Prices[]
  media         Image[]
  location1     String?
  location2     String?
  location3     String?
  location4     String?
  team          Team[]
  postalCode    String
  Transaction   Transaction? @relation(fields: [transactionId], references: [id])
  transactionId Int?
  User          User?        @relation(fields: [userId], references: [id])
  userId        Int?
}

model Prices {
  id      Int    @id @default(autoincrement()) @map("_id")
  place   String
  Amount  Int
  Event   Event? @relation(fields: [eventId], references: [id])
  eventId Int?
}

model Image {
  id       Int     @id @default(autoincrement()) @map("_id")
  image    String
  Event    Event?  @relation(fields: [eventId], references: [id])
  eventId  Int?
  Player   Player? @relation(fields: [playerId], references: [id])
  playerId Int?
}

model Team {
  id            Int          @id @default(autoincrement()) @map("_id")
  name          String
  club          String
  country       String
  city          String
  coathName     String
  gender        String
  sname         String
  races         Races[]
  players       Player[]
  Transaction   Transaction? @relation(fields: [transactionId], references: [id])
  transactionId Int?
  Event         Event?       @relation(fields: [eventId], references: [id])
  eventId       Int?
  User          User?        @relation(fields: [userId], references: [id])
  userId        Int?
}

model Player {
  id        Int     @id @default(autoincrement()) @map("_id")
  firstName String
  surName   String
  gender    String
  dateBirth String
  image     Image[]
  Team      Team?   @relation(fields: [teamId], references: [id])
  teamId    Int?
  User      User?   @relation(fields: [userId], references: [id])
  userId    Int?
}

model Races {
  id       Int      @id @default(autoincrement()) @map("_id")
  Date     DateTime
  location String
  result   String
  place    Int
  Race     String
  Team     Team?    @relation(fields: [teamId], references: [id])
  teamId   Int?
}
